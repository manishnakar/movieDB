{"version":3,"sources":["components/Pagination/CustomPagination.js","components/card/card.js","config/config.js","pages/search.js"],"names":["darkTheme","createTheme","palette","type","CustomPagination","setPage","numOfPages","style","width","display","justifyContent","marginTop","theme","count","onChange","e","page","target","textContent","window","scroll","hideNextButton","hidePrevButton","color","card","props","data","poster_path","title","name","release_date","first_air_date","vote_average","title1","className","Badge","badgeContent","src","alt","Search","useState","setType","searchText","setSearchText","content","setContent","setNumOfPages","fetchSearch","a","axios","get","process","results","total_pages","useEffect","primary","main","margin","flex","variant","label","value","marginRight","onClick","indicatorColor","textColor","event","newValue","map","c","id"],"mappings":"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","file":"static/js/7.081c7cd5.chunk.js","sourcesContent":["import React from 'react'\r\nimport Pagination from '@material-ui/lab/Pagination'\r\nimport { ThemeProvider} from '@material-ui/core'\r\nimport { createTheme } from '@material-ui/core/styles'\r\n\r\nconst darkTheme = createTheme({\r\n    palette: {\r\n        type: 'dark'\r\n    }\r\n\r\n})\r\n\r\nfunction CustomPagination({setPage, numOfPages = 10}) {\r\n\r\n    const handlePageChange = (page) => {\r\n        setPage(page)\r\n        window.scroll(0,0)\r\n    }\r\n\r\n    return (\r\n        <div style={{\r\n            width: \"100%\", \r\n            display: \"flex\", \r\n            justifyContent: \"center\",    \r\n            marginTop: 10\r\n            }}>\r\n                <ThemeProvider theme={darkTheme}>\r\n            <Pagination \r\n            count={numOfPages} \r\n            onChange={ (e) =>  handlePageChange(e.target.textContent) } \r\n            hideNextButton\r\n            hidePrevButton\r\n            color=\"primary\"\r\n            />\r\n            </ThemeProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomPagination\r\n","import React from 'react'\r\nimport {img_300, unavailable} from '../../config/config'\r\nimport './card.css'\r\nimport { Badge }  from '@material-ui/core'\r\n\r\n\r\nfunction card(props) {\r\n    \r\n    const { poster_path, title,name, release_date,first_air_date, vote_average} = props.data\r\n\r\n    const title1 = title || name\r\n\r\n    return (\r\n        <div className=\"media\">\r\n            <Badge badgeContent={vote_average} color={vote_average>6?'primary': 'secondary'} />\r\n            <img className=\"poster\" src={poster_path? `${img_300}/${poster_path}` : unavailable} alt={title1} />\r\n            <b className=\"title\">{title1}</b>\r\n            <span className=\"subTitle\">{first_air_date? \"TV series\" : \"Movie\" }\r\n            <span className=\"subTitle\">{release_date || first_air_date}</span>\r\n            </span>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default card\r\n","//image sizes for tmdb\r\nexport const img_300 = \"https://image.tmdb.org/t/p/w300\";\r\nexport const img_500 = \"https://image.tmdb.org/t/p/w500\";\r\n\r\n// contentModal and singleContent\r\nexport const unavailable =\r\n  \"https://www.movienewz.com/img/films/poster-holder.jpg\";\r\n\r\n// contentModal\r\nexport const unavailableLandscape =\r\n  \"https://user-images.githubusercontent.com/10515204/56117400-9a911800-5f85-11e9-878b-3f998609a6c8.jpg\";\r\n\r\n// For Carousel\r\nexport const noPicture =\r\n  \"https://upload.wikimedia.org/wikipedia/en/6/60/No_Picture.jpg\";","import React , {useState, useEffect} from 'react'\r\nimport { TextField, Button, ThemeProvider, Tab, Tabs } from '@material-ui/core'\r\nimport  SearchIcon  from '@material-ui/icons/Search'\r\nimport { createTheme } from '@material-ui/core/styles'\r\nimport axios from 'axios'\r\nimport Pagination from '../components/Pagination/CustomPagination'\r\nimport Card from '../components/card/card'\r\nconst Search = () => {\r\n\r\n  const [type, setType] = useState(0)\r\n  const [page, setPage] = useState(1)\r\n  const [searchText, setSearchText] = useState(\"\")\r\n  const [content, setContent] = useState([])\r\n  const [numOfPages, setNumOfPages] = useState([])\r\n\r\n  const fetchSearch = async () => {\r\n\r\n      const {data} = await axios.get(`${process.env.REACT_APP_MOVIE_DB_API_URL}/3/search/${type? \"tv\" : \"movie\"}?api_key=${process.env.REACT_APP_MOVIE_DB_API_TOKEN}&language=en-US&query=${searchText}&page=${page}&include_default=false`)\r\n\r\n      setContent(data.results)\r\n      setNumOfPages(data.total_pages)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!searchText) return;  \r\n    window.scroll(0,0)  \r\n    fetchSearch()\r\n  }, [type, page])\r\n\r\n\r\n  const darkTheme = createTheme({\r\n    palette: {\r\n      type: 'dark',\r\n      primary: {\r\n        main: \"#fff\"\r\n      }\r\n    }\r\n  })\r\n\r\n\r\n  return (\r\n    <>\r\n    <ThemeProvider theme={darkTheme} >\r\n      <div style={{display: 'flex', margin : \"15px 0\"}}> \r\n        <TextField \r\n        style={{ flex: 1}}\r\n        className=\"searchBox\" \r\n        variant=\"filled\"\r\n        label=\"Search\"\r\n        onChange={(e) => setSearchText(e.target.value)}\r\n        />\r\n        <Button variant=\"contained\" style={{ marginRight: 10}} onClick={()=> fetchSearch()}>\r\n        <SearchIcon />\r\n        </Button>\r\n      </div>\r\n\r\n    <Tabs value={type} indicatorColor=\"primary\" textColor=\"primary\" \r\n    onChange={(event, newValue) => { setType(newValue); setPage(1)}}\r\n    >\r\n      <Tab style={{ width: \"50%\"}} label=\"Search Movies\" />\r\n      <Tab style={{ width: \"50%\"}} label=\"Search TV Series\" />\r\n\r\n    </Tabs>\r\n\r\n      </ThemeProvider>\r\n\r\n <div className=\"trending\">\r\n      {\r\n        \r\n        content && (\r\n          content.map((c) => {\r\n            return <Card data={c} key={c.id} />\r\n          })\r\n        )\r\n      }\r\n\r\n      { searchText && !content && (type? <h2>No series Found</h2> : <h2>No movie Found</h2>)}\r\n\r\n      </div>\r\n      {\r\n        numOfPages > 1 && (\r\n          <Pagination setPage={setPage} numOfPages={numOfPages} />\r\n        )\r\n      }\r\n    \r\n      \r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Search\r\n     \r\n"],"sourceRoot":""}